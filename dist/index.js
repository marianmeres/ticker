const e=e=>"function"==typeof e,t=(t,n="")=>{if(!e(t))throw new TypeError(`${n} Expecting function arg`.trim())},n=(n=1e3,s=!1)=>{const r=e=>{if(e=parseInt(e,10),isNaN(e)||e<=0)throw new TypeError("Invalid interval. Expecting positive non-zero number of milliseconds.");n=e};r(n);const i=((n=undefined,s=null)=>{const r=t=>e(s?.persist)&&s.persist(t);let i=(()=>{const e=new Map,t=t=>(e.has(t)||e.set(t,new Set),e.get(t)),n=(e,n)=>{if("function"!=typeof n)throw new TypeError("Expecting callback function as second argument");return t(e).add(n),()=>t(e).delete(n)};return{publish:(e,n={})=>{t(e).forEach((e=>e(n)))},subscribe:n,subscribeOnce:(e,t)=>{const s=n(e,(e=>{t(e),s()}));return s},unsubscribeAll:t=>e.delete(t)}})(),c=n;r(c);const o=()=>c,u=e=>{c!==e&&(c=e,r(c),i.publish("change",c))};return{set:u,get:o,update:e=>{t(e,"[update]"),u(e(o()))},subscribe:e=>(t(e,"[subscribe]"),e(c),i.subscribe("change",e))}})(0);let c=0;const o=()=>{i.set(Date.now()),c=setTimeout(o,n)},u={subscribe:i.subscribe,start:()=>(!c&&o(),u),stop:()=>(i.set(0),c&&(clearTimeout(c),c=0),u),setInterval:e=>(r(e),u)};return s&&u.start(),u};export{n as createTicker};
