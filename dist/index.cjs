"use strict";const t=t=>"function"==typeof t,e=(e,r="")=>{if(!t(e))throw new TypeError(`${r} Expecting function arg`.trim())},r=(r,s=null)=>{const n=e=>t(s?.persist)&&s.persist(e);let o=(()=>{const t=new Map,e=e=>(t.has(e)||t.set(e,new Set),t.get(e)),r=(t,r)=>{if("function"!=typeof r)throw new TypeError("Expecting callback function as second argument");return e(t).add(r),()=>e(t).delete(r)};return{publish:(t,r)=>{e(t).forEach((t=>t(r)))},subscribe:r,subscribeOnce:(t,e)=>{const s=r(t,(t=>{e(t),s()}));return s},unsubscribeAll:e=>t.delete(e)}})(),i=r;n(i);const c=()=>i,a=t=>{i!==t&&(i=t,n(i),o.publish("change",i))};return{set:a,get:c,update:t=>{e(t,"[update]"),a(t(c()))},subscribe:t=>(e(t,"[subscribe]"),t(i),o.subscribe("change",t))}},s=()=>"undefined"!=typeof window?window.performance.now():Date.now(),n=t=>{if(t=parseInt(t,10),Number.isNaN(t)||t<=0)throw new TypeError("Invalid interval. Expecting positive non-zero number of milliseconds.");return t};exports.createDelayedWorkerTicker=(t,e=1e3,s=!1)=>{const o=(t={})=>({started:0,finished:0,error:null,result:null,...t||{}});let i=0;const c=r(o());let a=0,u=s;const l=async()=>{if(!u)return;const r=Date.now();try{const e=c.get();c.set(o({started:r}));const s=await t(e);u&&c.set(o({started:r,finished:Date.now(),error:null,result:s}))}catch(t){u&&c.set(o({started:r,finished:Date.now(),error:t}))}if(u){a&&clearTimeout(a);const t=(s=i||0,n("function"==typeof e?e(s,c.get()):e));a=setTimeout(l,t),i=t}var s},p={subscribe:c.subscribe,start:()=>(u=!0,!a&&l(),p),stop:()=>(a&&(clearTimeout(a),a=0),u=!1,i=0,p),toggle:()=>(u?p.stop():p.start(),p),isStarted:()=>u,setInterval:t=>(e=t,p)};return s&&p.start(),p},exports.createTicker=(t=1e3,e=!1,o=null)=>{const i=r(0);let c=0;const a=e=>n("function"==typeof t?t(e,i.get()):t);let u=a(0),l=e,p=0;const f=()=>{const t=s();if(p||=t,i.set(Date.now()),!l)return;const e=s()-p,r=e?e-u:0,n=Math.max(0,a(u)-r);c=setTimeout(f,n),u=n,p=s(),((...t)=>{"function"==typeof o&&o.apply(null,t)})({_start:t,_duration:e,_offset:r,_nextInterval:n})},b={subscribe:i.subscribe,start:()=>(l=!0,!c&&f(),b),stop:()=>(l=!1,i.set(0),c&&(clearTimeout(c),c=0),p=0,u=0,b),toggle:()=>(l?b.stop():b.start(),b),isStarted:()=>l,setInterval:e=>(t=e,b)};return e&&b.start(),b};
