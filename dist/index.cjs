"use strict";const e=e=>"function"==typeof e,t=(t,r="")=>{if(!e(t))throw new TypeError(`${r} Expecting function arg`.trim())},r=(r=void 0,s=null)=>{const n=t=>e(s?.persist)&&s.persist(t);let o=(()=>{const e=new Map,t=t=>(e.has(t)||e.set(t,new Set),e.get(t)),r=(e,r)=>{if("function"!=typeof r)throw new TypeError("Expecting callback function as second argument");return t(e).add(r),()=>t(e).delete(r)};return{publish:(e,r)=>{t(e).forEach((e=>e(r)))},subscribe:r,subscribeOnce:(e,t)=>{const s=r(e,(e=>{t(e),s()}));return s},unsubscribeAll:t=>e.delete(t)}})(),c=r;n(c);const i=()=>c,a=e=>{c!==e&&(c=e,n(c),o.publish("change",c))};return{set:a,get:i,update:e=>{t(e,"[update]"),a(e(i()))},subscribe:e=>(t(e,"[subscribe]"),e(c),o.subscribe("change",e))}},s=()=>"undefined"!=typeof window?window.performance.now():Date.now(),n=e=>{if(e=parseInt(e,10),Number.isNaN(e)||e<=0)throw new TypeError("Invalid interval. Expecting positive non-zero number of milliseconds.");return e};exports.createDelayedWorkerTicker=(e,t=1e3,s=!1)=>{const o=e=>t=n(e),c=(e={})=>({started:0,finished:0,error:null,result:null,...e||{}});o(t);const i=r(c());let a=0,u=s;const l=async()=>{if(!u)return;const r=Date.now();try{const t=i.get();i.set(c({started:r}));const s=await e(t);u&&i.set(c({started:r,finished:Date.now(),result:s}))}catch(e){u&&i.set(c({started:r,finished:Date.now(),error:e}))}u&&(a&&clearTimeout(a),a=setTimeout(l,t))},p={subscribe:i.subscribe,start:()=>(u=!0,!a&&l(),p),stop:()=>(a&&(clearTimeout(a),a=0),u=!1,p),setInterval:e=>(o(e),p)};return s&&p.start(),p},exports.createTicker=(e=1e3,t=!1,o=null)=>{const c=t=>e=n(t);c(e);const i=r(0);let a=0,u=0;const l=()=>{const t=s();u||=t,i.set(Date.now());const r=s()-u,n=r?r-e:0,c=Math.max(0,e-n);a=setTimeout(l,c),u=s(),((...e)=>{"function"==typeof o&&o.apply(null,e)})({_start:t,_duration:r,_offset:n,_nextInterval:c})},p={subscribe:i.subscribe,start:()=>(!a&&l(),p),stop:()=>(i.set(0),a&&(clearTimeout(a),a=0),u=0,p),setInterval:e=>(c(e),p)};return t&&p.start(),p};
